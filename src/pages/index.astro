---
import "@fontsource/inter/latin.css"
import { Moon, Sun } from "lucide-astro"
import "pretendard/dist/web/variable/pretendardvariable-dynamic-subset.css"
import WinnerCard from "~/components/WinnerCard.astro"
import { getSortedContests } from "~/lib/getSortedContests"

const contests = await getSortedContests()
---

<html lang="ko" class="font-sans tracking-tighter">
  <head>
    <meta charset="utf-8" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>월간 향유회 - 명예의 전당</title>
  </head>
  <body class="dark:bg-dark-9 dark:text-white">
    <header>
      <nav class="b-b b-solid b-light-9 dark:b-dark-3">
        <div
          class="mx-auto lg:max-w-6xl md:max-w-4xl text-5 py-2 px-4 font-bold flex flex-row"
        >
          <span class="flex-1"
            ><a class="text-unset decoration-none flex flex-row items-center gap-2" href="/"
              ><img class="h-5" src="/logo.webp" /> 월간 향유회</a
            ></span
          >
          <button type="button" data-toggle-theme
            ><Sun class="dark:hidden" /><Moon
              class="hidden dark:inline"
            /></button
          >
        </div>
      </nav>
      <h1 class="my-16 text-5xl text-center font-black">명예의 전당</h1>
    </header>
    <main
      class="mx-auto my-4 lg:max-w-6xl md:max-w-4xl grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 px-4"
    >
      {contests.map(({ id, data }) => <WinnerCard id={id} data={data} />)}
    </main>
    <footer class="b-t b-solid b-light-9 dark:b-dark-3">
      <div
        class="mx-auto lg:max-w-6xl md:max-w-4xl text-sm py-4 px-4 text-gray-4"
      >
        &copy; 2024 kiwiyou
      </div>
    </footer>
    <script>
      applyTheme()
      const toggleButton = document.querySelector("[data-toggle-theme]")
      toggleButton?.addEventListener("click", () => {
        const isDark = document.documentElement.classList.contains("dark")
        const newTheme = isDark ? "light" : "dark"
        localStorage.setItem("theme", newTheme)
        applyTheme(newTheme)
      })
      function applyTheme(to?: string) {
        const localTheme = to ?? localStorage.getItem("theme")
        const preferredTheme = window.matchMedia("(prefers-color-scheme: dark)")
          .matches
          ? "dark"
          : "light"
        const theme = localTheme ?? preferredTheme
        if (theme === "dark") document.documentElement.classList.add("dark")
        else document.documentElement.classList.remove("dark")
      }
    </script>
  </body>
</html>
